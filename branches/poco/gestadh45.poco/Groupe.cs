//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace gestadh45.poco
{
    public partial class Groupe
    {
        #region Primitive Properties
    
        public virtual long ID
        {
            get;
            set;
        }
    
        public virtual string Libelle
        {
            get;
            set;
        }
    
        public virtual long ID_JourSemaine
        {
            get { return _iD_JourSemaine; }
            set
            {
                if (_iD_JourSemaine != value)
                {
                    if (JourSemaine != null && JourSemaine.ID != value)
                    {
                        JourSemaine = null;
                    }
                    _iD_JourSemaine = value;
                }
            }
        }
        private long _iD_JourSemaine;
    
        public virtual long NbPlaces
        {
            get;
            set;
        }
    
        public virtual string Commentaire
        {
            get;
            set;
        }
    
        public virtual long ID_Saison
        {
            get { return _iD_Saison; }
            set
            {
                if (_iD_Saison != value)
                {
                    if (Saison != null && Saison.ID != value)
                    {
                        Saison = null;
                    }
                    _iD_Saison = value;
                }
            }
        }
        private long _iD_Saison;
    
        public virtual System.DateTime HeureDebutDT
        {
            get;
            set;
        }
    
        public virtual System.DateTime HeureFinDT
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Saison Saison
        {
            get { return _saison; }
            set
            {
                if (!ReferenceEquals(_saison, value))
                {
                    var previousValue = _saison;
                    _saison = value;
                    FixupSaison(previousValue);
                }
            }
        }
        private Saison _saison;
    
        public virtual JourSemaine JourSemaine
        {
            get { return _jourSemaine; }
            set
            {
                if (!ReferenceEquals(_jourSemaine, value))
                {
                    var previousValue = _jourSemaine;
                    _jourSemaine = value;
                    FixupJourSemaine(previousValue);
                }
            }
        }
        private JourSemaine _jourSemaine;
    
        public virtual ICollection<Inscription> Inscription
        {
            get
            {
                if (_inscription == null)
                {
                    var newCollection = new FixupCollection<Inscription>();
                    newCollection.CollectionChanged += FixupInscription;
                    _inscription = newCollection;
                }
                return _inscription;
            }
            set
            {
                if (!ReferenceEquals(_inscription, value))
                {
                    var previousValue = _inscription as FixupCollection<Inscription>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInscription;
                    }
                    _inscription = value;
                    var newValue = value as FixupCollection<Inscription>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInscription;
                    }
                }
            }
        }
        private ICollection<Inscription> _inscription;

        #endregion
        #region Association Fixup
    
        private void FixupSaison(Saison previousValue)
        {
            if (previousValue != null && previousValue.Groupe.Contains(this))
            {
                previousValue.Groupe.Remove(this);
            }
    
            if (Saison != null)
            {
                if (!Saison.Groupe.Contains(this))
                {
                    Saison.Groupe.Add(this);
                }
                if (ID_Saison != Saison.ID)
                {
                    ID_Saison = Saison.ID;
                }
            }
        }
    
        private void FixupJourSemaine(JourSemaine previousValue)
        {
            if (previousValue != null && previousValue.Groupe.Contains(this))
            {
                previousValue.Groupe.Remove(this);
            }
    
            if (JourSemaine != null)
            {
                if (!JourSemaine.Groupe.Contains(this))
                {
                    JourSemaine.Groupe.Add(this);
                }
                if (ID_JourSemaine != JourSemaine.ID)
                {
                    ID_JourSemaine = JourSemaine.ID;
                }
            }
        }
    
        private void FixupInscription(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Inscription item in e.NewItems)
                {
                    item.Groupe = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Inscription item in e.OldItems)
                {
                    if (ReferenceEquals(item.Groupe, this))
                    {
                        item.Groupe = null;
                    }
                }
            }
        }

        #endregion
    }
}
